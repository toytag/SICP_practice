(define (P-T i j)
    (cond ((= j 1) 1)
          ((= i j) 1)
          (else (+ (P-T (- i 1)
                        j)
                   (P-T (- i 1)
                        (- j 1))))))

(define (P-T-row n)
    (define (row-constructor count)
        (if (> count n)
            '()
            (cons (P-T n count) 
                  (row-constructor (+ count 1)))))
    (row-constructor 1))

(display (P-T-row 1))
(newline)
(display (P-T-row 2))
(newline)
(display (P-T-row 3))
(newline)
(display (P-T-row 4))
(newline)
(display (P-T-row 5))
(newline)